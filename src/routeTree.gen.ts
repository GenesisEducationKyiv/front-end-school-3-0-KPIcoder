/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WebtransportTestRouteImport } from './routes/webtransport-test'
import { Route as TracksRouteImport } from './routes/tracks'
import { Route as IndexRouteImport } from './routes/index'

const WebtransportTestRoute = WebtransportTestRouteImport.update({
  id: '/webtransport-test',
  path: '/webtransport-test',
  getParentRoute: () => rootRouteImport,
} as any)
const TracksRoute = TracksRouteImport.update({
  id: '/tracks',
  path: '/tracks',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tracks': typeof TracksRoute
  '/webtransport-test': typeof WebtransportTestRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tracks': typeof TracksRoute
  '/webtransport-test': typeof WebtransportTestRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/tracks': typeof TracksRoute
  '/webtransport-test': typeof WebtransportTestRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/tracks' | '/webtransport-test'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/tracks' | '/webtransport-test'
  id: '__root__' | '/' | '/tracks' | '/webtransport-test'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TracksRoute: typeof TracksRoute
  WebtransportTestRoute: typeof WebtransportTestRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/webtransport-test': {
      id: '/webtransport-test'
      path: '/webtransport-test'
      fullPath: '/webtransport-test'
      preLoaderRoute: typeof WebtransportTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tracks': {
      id: '/tracks'
      path: '/tracks'
      fullPath: '/tracks'
      preLoaderRoute: typeof TracksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TracksRoute: TracksRoute,
  WebtransportTestRoute: WebtransportTestRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
